package models;
// Generated 15 mai 2022 15:03:36 by Hibernate Tools 3.6.0.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Rapport generated by hbm2java
 */
@Entity
@Table(name = "rapport", schema = "public")
public class Rapport implements java.io.Serializable {

	private int id;
	private Rapport rapport;
	private String contenue;
	private Set<Rapport> rapports = new HashSet<Rapport>(0);
	private Set<Depense> depenses = new HashSet<Depense>(0);
	private Set<Gerant> gerants = new HashSet<Gerant>(0);
	private Set<Recette> recettes = new HashSet<Recette>(0);

	public Rapport() {
	}

	public Rapport(int id) {
		this.id = id;
	}

	public Rapport(int id, Rapport rapport, String contenue, Set<Rapport> rapports, Set<Depense> depenses,
			Set<Gerant> gerants, Set<Recette> recettes) {
		this.id = id;
		this.rapport = rapport;
		this.contenue = contenue;
		this.rapports = rapports;
		this.depenses = depenses;
		this.gerants = gerants;
		this.recettes = recettes;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public int getId() {
		return this.id;
	}

	public void setId(int id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "rap_id")
	public Rapport getRapport() {
		return this.rapport;
	}

	public void setRapport(Rapport rapport) {
		this.rapport = rapport;
	}

	@Column(name = "contenue", length = 254)
	public String getContenue() {
		return this.contenue;
	}

	public void setContenue(String contenue) {
		this.contenue = contenue;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapport")
	public Set<Rapport> getRapports() {
		return this.rapports;
	}

	public void setRapports(Set<Rapport> rapports) {
		this.rapports = rapports;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapport")
	public Set<Depense> getDepenses() {
		return this.depenses;
	}

	public void setDepenses(Set<Depense> depenses) {
		this.depenses = depenses;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "association_17", schema = "public", joinColumns = {
			@JoinColumn(name = "id", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "ger_id", nullable = false, updatable = false) })
	public Set<Gerant> getGerants() {
		return this.gerants;
	}

	public void setGerants(Set<Gerant> gerants) {
		this.gerants = gerants;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "rapport")
	public Set<Recette> getRecettes() {
		return this.recettes;
	}

	public void setRecettes(Set<Recette> recettes) {
		this.recettes = recettes;
	}

}
